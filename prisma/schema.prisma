generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  name     String
  email    String     @unique
  password String
  imageUrl String?
  status   UserStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages     Message[]
  rooms        UserRoom[]
  confirmCodes ConfirmCode[]

  @@map("users")
}

model ConfirmCode {
  id     Int    @id @default(autoincrement())
  code   String
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  status ConfirmCodeStatus @default(PENDING)
  user   User              @relation(fields: [userId], references: [id])

  @@map("confirm_code")
}

model UserRoom {
  id     Int @id @default(autoincrement())
  userId Int
  roomId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  room Room @relation(fields: [roomId], references: [id])

  @@map("users_rooms")
}

model Room {
  id   Int    @id @default(autoincrement())
  name String
  code String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users    UserRoom[]
  messages Message[]

  @@map("rooms")
}

model Message {
  id      Int    @id @default(autoincrement())
  content String
  roomId  Int
  userId  Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  room Room @relation(fields: [roomId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@map("messages")
}

enum ConfirmCodeStatus {
  PENDING
  USED
  EXPIRED

  @@map("confirm_code_status")
}

enum UserStatus {
  PENDING
  ACTIVE

  @@map("user_status")
}
